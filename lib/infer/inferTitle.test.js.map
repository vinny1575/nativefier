{"version":3,"sources":["infer/inferTitle.test.js"],"names":["jest","mock","fn","Promise","resolve","data","test","result","expect","axios","toHaveBeenCalledTimes","toBe"],"mappings":";;AAAA;;;;AACA;;;;;;;;AAEAA,KAAKC,IAAL,CAAU,OAAV,EAAmB;AAAA,SACjBD,KAAKE,EAAL,CAAQ;AAAA,WACNC,QAAQC,OAAR,CAAgB;AACdC,YAAO;;;;;;AADO,KAAhB,CADM;AAAA,GAAR,CADiB;AAAA,CAAnB;;AAaAC,KAAK,8BAAL,0DAAqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACd,0BAAW,SAAX,CADc;;AAAA;AAC7BC,gBAD6B;;AAEnCC,iBAAOC,eAAP,EAAcC,qBAAd,CAAoC,CAApC;AACAF,iBAAOD,MAAP,EAAeI,IAAf,CAAoB,YAApB;;AAHmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAArC","file":"inferTitle.test.js","sourcesContent":["import axios from 'axios';\nimport inferTitle from './inferTitle';\n\njest.mock('axios', () =>\n  jest.fn(() =>\n    Promise.resolve({\n      data: `\n        <HTML>\n          <head>\n            <title>TEST_TITLE</title>\n          </head>\n        </HTML>`,\n    }),\n  ),\n);\n\ntest('it returns the correct title', async () => {\n  const result = await inferTitle('someurl');\n  expect(axios).toHaveBeenCalledTimes(1);\n  expect(result).toBe('TEST_TITLE');\n});\n"]}